spring.application.name=receiver-iot

# Cambiamos el puerto del servicio
server.port=${SERVER_PORT:8080}

# Configuracion del broker MQTT
mqtt.broker.url=${MQTT_BROKER:ssl://uceva.gleeze.com:8883}
mqtt.client.id=${MQTT_CLIENTID:receiver}
mqtt.username=${MQTT_USERNAME:device1}
mqtt.password=${MQTT_PASSWORD:a1b2c3d4}
mqtt.topic=${MQTT_TOPIC:+/+/+/+/+/+}
mqtt.qos=${MQTT_QOS:0}


# Configuracion de la base de datos

# Configuracion del proveedor de la base de datos y de la base de datos a utilizar.
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/iot_data_db}
# Configuracion del usuario
spring.datasource.username=${DB_USERNAME:iot_db_user}
# Configuracion de la contrasena
spring.datasource.password=${DB_PASSWORD:a1b2c3d4}

## Configuracion de JPA (Java Persistence API)
# Ajustamos la estrategia DDL (Data Definition Language)
# Crea las tablas al arrancar la aplicacion y las elimina al pararla. (create-drop, create, update, validate, none)
# create-drop: crea las tablas al arrancar la aplicacion y las elimina al pararla.
# create: crea las tablas al arrancar la aplicacion.
# update: crea las tablas al arrancar la aplicacion si no existen y las actualiza si existen.
# validate: valida las tablas al arrancar la aplicacion si existen.
# none: no crea ni valida las tablas al arrancar la aplicacion.
spring.jpa.hibernate.ddl-auto=${JPA_DDL:create-drop}
# Habilita transacciones de jpa mientras se renderiza la vista. (true, false)
spring.jpa.open-in-view = true

## Configuracion de la aplicacion
# Habilita o deshabilita las referencias circulares en la inyeccion de dependencias.
# Cuando es 'true', se permiten referencias circulares; cuando es 'false', se lanzara una excepcion en caso de referencias circulares.
spring.main.allow-circular-references=true

#
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

## Configuracion de la visualizacion de las consultas SQL en la consola (no para produccion)
# Habilita la visualizacion de las consultas SQL en la consola. (true, false)
spring.jpa.show-sql=false


